{"remainingRequest":"/Users/linqingguang/Documents/文稿/项目/微信实时聊天/client/node_modules/babel-loader/lib/index.js!/Users/linqingguang/Documents/文稿/项目/微信实时聊天/client/src/store.js","dependencies":[{"path":"/Users/linqingguang/Documents/文稿/项目/微信实时聊天/client/src/store.js","mtime":1559648750986},{"path":"/Users/linqingguang/Documents/文稿/项目/微信实时聊天/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linqingguang/Documents/文稿/项目/微信实时聊天/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/linqingguang/Documents/\\u6587\\u7A3F/\\u9879\\u76EE/\\u5FAE\\u4FE1\\u5B9E\\u65F6\\u804A\\u5929/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar types = {\n  SET_USER: 'SET_USER',\n  // 用户信息\n  SET_TARGET_USER: 'SET_TARGET_USER'\n};\nvar state = {\n  // 需要维护的状态\n  user: {},\n  // 存储用户信息\n  targetUser: {}\n};\nvar getters = {\n  //获取状态\n  user: function user(state) {\n    return state.user;\n  },\n  targetUser: function targetUser(state) {\n    return state.targetUser;\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_USER, function (state, user) {\n  if (user) state.user = user; //是否有内容\n  else state.user = {};\n}), _defineProperty(_mutations, types.SET_TARGET_USER, function (state, targetUser) {\n  if (targetUser) state.targetUser = targetUser;else state.targetUser = {};\n}), _mutations);\nvar actions = {\n  setUser: function setUser(_ref, user) {\n    var commit = _ref.commit;\n    //接受组件传递参数\n    commit(types.SET_USER, user);\n  },\n  setTargetUser: function setTargetUser(_ref2, targetUser) {\n    var commit = _ref2.commit;\n    commit(types.SET_TARGET_USER, targetUser);\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["/Users/linqingguang/Documents/文稿/项目/微信实时聊天/client/src/store.js"],"names":["Vue","Vuex","use","types","SET_USER","SET_TARGET_USER","state","user","targetUser","getters","mutations","actions","setUser","commit","setTargetUser","Store"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,IAAME,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,UADE;AACU;AACtBC,EAAAA,eAAe,EAAE;AAFL,CAAd;AAKA,IAAMC,KAAK,GAAG;AACZ;AACAC,EAAAA,IAAI,EAAE,EAFM;AAEF;AACVC,EAAAA,UAAU,EAAE;AAHA,CAAd;AAMA,IAAMC,OAAO,GAAG;AAAI;AAClBF,EAAAA,IAAI,EAAE,cAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GADG;AAEdC,EAAAA,UAAU,EAAE,oBAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,UAAV;AAAA;AAFH,CAAhB;AAKA,IAAME,SAAS,iDACZP,KAAK,CAACC,QADM,YACIE,KADJ,EACWC,IADX,EACiB;AAC5B,MAAIA,IAAJ,EAAUD,KAAK,CAACC,IAAN,GAAaA,IAAb,CAAV,CAA8B;AAA9B,OACKD,KAAK,CAACC,IAAN,GAAa,EAAb;AACN,CAJY,+BAMZJ,KAAK,CAACE,eANM,YAMWC,KANX,EAMkBE,UANlB,EAM8B;AACzC,MAAIA,UAAJ,EAAgBF,KAAK,CAACE,UAAN,GAAmBA,UAAnB,CAAhB,KACKF,KAAK,CAACE,UAAN,GAAmB,EAAnB;AACN,CATY,cAAf;AAYA,IAAMG,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,uBAAaL,IAAb,EAAsB;AAAA,QAAnBM,MAAmB,QAAnBA,MAAmB;AAAE;AAC/BA,IAAAA,MAAM,CAACV,KAAK,CAACC,QAAP,EAAiBG,IAAjB,CAAN;AACD,GAHa;AAIdO,EAAAA,aAAa,EAAE,8BAAaN,UAAb,EAA4B;AAAA,QAAzBK,MAAyB,SAAzBA,MAAyB;AACzCA,IAAAA,MAAM,CAACV,KAAK,CAACE,eAAP,EAAwBG,UAAxB,CAAN;AACD;AANa,CAAhB;AASA,eAAe,IAAIP,IAAI,CAACc,KAAT,CAAe;AAC5BT,EAAAA,KAAK,EAALA,KAD4B;AAE5BG,EAAAA,OAAO,EAAPA,OAF4B;AAG5BC,EAAAA,SAAS,EAATA,SAH4B;AAI5BC,EAAAA,OAAO,EAAPA;AAJ4B,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nconst types = {\n  SET_USER: 'SET_USER', // 用户信息\n  SET_TARGET_USER: 'SET_TARGET_USER'\n};\n\nconst state = {\n  // 需要维护的状态\n  user: {}, // 存储用户信息\n  targetUser: {}\n};\n\nconst getters = {   //获取状态\n  user: state => state.user,\n  targetUser: state => state.targetUser\n};\n\nconst mutations = {\n  [types.SET_USER](state, user) {\n    if (user) state.user = user;  //是否有内容\n    else state.user = {};\n  },\n\n  [types.SET_TARGET_USER](state, targetUser) {\n    if (targetUser) state.targetUser = targetUser;\n    else state.targetUser = {};\n  }\n};\n\nconst actions = {\n  setUser: ({ commit }, user) => { //接受组件传递参数\n    commit(types.SET_USER, user);\n  },\n  setTargetUser: ({ commit }, targetUser) => {\n    commit(types.SET_TARGET_USER, targetUser);\n  }\n};\n\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions\n});\n"]}]}